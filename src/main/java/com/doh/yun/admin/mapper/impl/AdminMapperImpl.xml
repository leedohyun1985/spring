<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.doh.yun.admin.mapper.AdminMapper">

	<select id="selectUserInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	/* AdminMapperImpl.xml | selectUserInfo | Lee Dohyun */
	SELECT
		user_id
	,	user_email
	,	user_name<!-- , password --><!-- , enabled , email_cnt , c_user_id , c_timestamp , m_user_id 
			, m_timestamp -->
	FROM
		spring.users
	</select>

	<select id="selectTableComment" parameterType="java.util.HashMap" resultType="java.lang.String">
	/* AdminMapperImpl.xml | selectTableComment | Lee Dohyun */
	SELECT
		table_comment
	FROM
		information_schema.tables
	WHERE
		table_schema = #{databaseName}
	AND table_name = #{tableName}
	</select>

	<select id="selectTableNamesAndComments" parameterType="java.util.HashMap" resultType="com.doh.yun.admin.dto.CamelMap">
	/* AdminMapperImpl.xml | selectTableNamesAndComments | Lee Dohyun */
	SELECT
		ROW_NUMBER() OVER (ORDER BY table_name ASC) AS no
	,	table_name
	,	table_comment
	FROM
		information_schema.tables
	WHERE
		table_schema = #{databaseName}
	</select>

	<select id="selectTableData" parameterType="java.util.HashMap" resultType="com.doh.yun.admin.dto.CamelMap">
	/* AdminMapperImpl.xml | selectTableData | Lee Dohyun */
	SELECT
		*
	FROM
		${tableName}
	</select>

	<select id="selectColumnData" parameterType="java.util.HashMap" resultType="com.doh.yun.admin.dto.CamelMap">
	/* AdminMapperImpl.xml | selectColumnData | Lee Dohyun */
	SELECT
		column_name
	,	column_comment
	,	data_type
	FROM
		information_schema.columns
	WHERE
		table_schema = #{databaseName}
	AND table_name = #{tableName}
	ORDER BY
		ordinal_position
	</select>

	<select id="selectColumnConstraintInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	/* AdminMapperImpl.xml | selectColumnConstraintInfo | Lee Dohyun */
	SELECT
		a.table_catalog
	,	a.table_schema
	,	a.table_name
	,	a.column_name
	,	a.column_comment
	,	a.extra
	,	a.data_type
	,	b.constraint_catalog
	,	b.constraint_schema
	,	b.referenced_table_schema
	,	b.referenced_table_name
	,	b.referenced_column_name
	,	c.constraint_type
	FROM
		information_schema.columns a
	INNER JOIN
		information_schema.key_column_usage b
	ON
		a.table_catalog = b.table_catalog
	AND a.table_schema = b.table_schema
	AND a.table_name = b.table_name
	AND a.column_name = b.column_name
	INNER JOIN
		information_schema.table_constraints c
	ON
		b.constraint_catalog = c.constraint_catalog
	AND b.constraint_schema = c.constraint_schema
	AND b.constraint_name = c.constraint_name
	AND b.table_schema = c.table_schema
	AND b.table_name = c.table_name
	WHERE
		a.table_schema = #{databaseName}
	AND a.table_name = #{tableName}
	ORDER BY
		a.table_catalog
	,	a.table_schema
	,	a.table_name
	,	b.ordinal_position
	</select>

	<select id="selectReferencedColumnData" parameterType="java.util.HashMap" resultType="java.lang.String">
	/* AdminMapperImpl.xml | selectReferencedColumnData | Lee Dohyun */
	SELECT
		${referenced_column_name}
	FROM
		${referenced_table_schema}.${referenced_table_name}
	</select>

	<insert id="insertTableDataCommon" parameterType="java.util.HashMap">
	/* AdminMapperImpl.xml | insertTableDataCommon | Lee Dohyun */
	<if test="dataList != null">
	INSERT INTO
		${tableName}
		(	
		<foreach collection="dataList" item="dataMap" index="i" separator=",">
		${dataMap.name}
		</foreach>
		)
	VALUES
		(
		<foreach collection="dataList" item="dataMap" index="i" separator=",">
		#{dataMap.value}
		</foreach>
		)
	</if>
	</insert>

	<update id="updateTableDataCommon" parameterType="java.util.HashMap">
	/* AdminMapperImpl.xml | updateTableDataCommon | Lee Dohyun */
	<if test="primaryKeyList != null and dataList != null">
	UPDATE
		${tableName}
	<set>
		<foreach collection="dataList" item="dataMap" index="i" separator=",">
		${dataMap.name} = #{dataMap.value}
		</foreach>
	</set>
	<where>
		<foreach collection="primaryKeyList" item="primaryKeyMap" index="i" separator="AND">
		${primaryKeyMap.name} = #{primaryKeyMap.value} 
		</foreach>
	</where>
	</if>
	</update>

	<delete id="deleteTableDataCommon" parameterType="java.util.HashMap">
	/* AdminMapperImpl.xml | deleteTableDataCommon | Lee Dohyun */
	<if test="primaryKeyList != null">
	DELETE
		FROM
		${tableName}
	<where>
		<foreach collection="primaryKeyList" item="primaryKeyMap" index="i" separator="AND">
		${primaryKeyMap.name} = #{primaryKeyMap.value}
		</foreach>
	</where>
	</if>   	
	</delete>
</mapper>